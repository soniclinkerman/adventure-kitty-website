{"version":3,"sources":["data/images/Carton.png","data/images/Carton_nocolor.png","data/images/Felicity_nocolor.png","data/images/Anna_nocolor.png","data/images/Felicity.png","data/images/Evil_Kitty_nocolor.png","data/images/Evil_Kitty.png","data/images/Anna.png","data/images/no_name_nocolor.png","data/images/no_name.png","containers/Card.js","components/Cardlist.js","components/SearchBox.js","data/character.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","state","hover","toggleHover","setState","this","props","image1","image2","name","onMouseEnter","onMouseLeave","className","style","backgroundImage","Component","CardList","characters","map","character","key","id","SearchBox","type","searchChange","onChange","Carton","nocolor_carton","Felicity","nocolor_felicity","DrKitty","nocolor_drkitty","Anna","nocolor_anna","no_name","nocolor_no_name","Scroll","children","overflowY","border","height","ErrorBoundary","hasError","App","filterCharacters","e","searchField","target","value","filteredCharacters","filter","toLowerCase","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02d516a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Carton.71a306b1.png\";","module.exports = __webpack_public_path__ + \"static/media/Carton_nocolor.2d84c4df.png\";","module.exports = __webpack_public_path__ + \"static/media/Felicity_nocolor.db98474c.png\";","module.exports = __webpack_public_path__ + \"static/media/Anna_nocolor.b10f565c.png\";","module.exports = __webpack_public_path__ + \"static/media/Felicity.f3fed2d8.png\";","module.exports = __webpack_public_path__ + \"static/media/Evil_Kitty_nocolor.b7dd029c.png\";","module.exports = __webpack_public_path__ + \"static/media/Evil_Kitty.f875ae98.png\";","module.exports = __webpack_public_path__ + \"static/media/Anna.a74ca6a3.png\";","module.exports = __webpack_public_path__ + \"static/media/no_name_nocolor.5102eace.png\";","module.exports = __webpack_public_path__ + \"static/media/no_name.a6f50e2f.png\";","import React, { Component } from \"react\"\nimport \"./Card.css\"\nclass Card extends Component{\n    constructor(){\n        super()\n        this.state = {\n            hover: false\n        }\n    }\n\n    render(){\n        const toggleHover = () => {\n            this.setState({hover: !this.state.hover})\n        }\n\n        const {image1, image2, name} = this.props;\n\n        return(\n            <div \n            onMouseEnter={toggleHover}\n            onMouseLeave={toggleHover}\n            className=\"bg-light-white dib br3 ma2 grow bw2 shadow-5 card\"\n            style={this.state.hover ? {backgroundImage: `url(${image1})`} : {backgroundImage: `url(${image2})`} }\n            >\n                <div>\n                    <h3>{name}</h3>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card\n","import React from \"react\"\nimport Card from \"../containers/Card\"\n\nconst CardList = ({characters}) => {\n   \n    return(\n        <div>\n            {\n                characters.map(character => {\n                    return(\n                        <Card \n                        key = {character.id}\n                        name={character.name}\n                        image1={character.image1}\n                        image2={character.image2}\n                        />\n\n                    )\n                })\n            }\n\n        </div>\n    )\n}\n\nexport default CardList\n","import React from \"react\"\n\nconst SearchBox = ({type,searchChange,}) => {\n    return(\n        <div className=\"pa2\">\n            <input \n            className=\"search-input pa3 ba b--gray bg-white tc\"\n            type={type} onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox\n","import Carton from \"./images/Carton.png\"\nimport nocolor_carton from \"./images/Carton_nocolor.png\"\nimport nocolor_felicity from \"./images/Felicity_nocolor.png\"\nimport nocolor_anna from \"./images/Anna_nocolor.png\"\nimport Felicity from \"./images/Felicity.png\"\nimport nocolor_drkitty from \"./images/Evil_Kitty_nocolor.png\"\nimport DrKitty from \"./images/Evil_Kitty.png\"\nimport Anna from \"./images/Anna.png\"\nimport nocolor_no_name from \"./images/no_name_nocolor.png\"\nimport no_name from \"./images/no_name.png\"\n\nexport const characters = [\n    {\n        id: 1,\n        name: \"Carton\",\n        image1: Carton,\n        image2: nocolor_carton\n    },\n    {\n        id: 2,\n        name: \"Felicity\",\n        image1: Felicity,\n        image2: nocolor_felicity\n    },\n    {\n        id: 3,\n        name: \"Evil Dr. Kitty\",\n        image1: DrKitty,\n        image2: nocolor_drkitty\n    },\n    {\n        id: 4,\n        name: \"Anna\",\n        image1: Anna,\n        image2: nocolor_anna\n    },\n    {\n        id: 5,\n        name: \"???\",\n        image1: no_name,\n        image2: nocolor_no_name\n    },\n\n]\n","import React from \"react\"\n\nconst Scroll = ({children}) => {\n    return(\n        <div style={{overflowY: \"scroll\", border: \"1px solid lightgray\", height: \"620px\"}}>\n            {children}\n        </div>\n    )\n}\n\nexport default Scroll\n","import React, { Component } from \"react\"\n\nclass ErrorBoundary extends Component{\n    constructor(props){\n        super(props);\n        this.state = {hasError: false}\n    }\n\n    componentDidCatch(){\n        this.setState({hasError: true})\n\n    }\n    render(){\n        if(this.state.hasError){\n            return(\n                <div>\n                    <h1>Uh oh. Looks like we got an error</h1>\n                    <p>Refresh the page or come back later...</p>\n                </div>\n            )\n        }\n        return this.props.children\n        \n    }\n}\n\nexport default ErrorBoundary\n","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from '../components/Cardlist';\nimport SearchBox from '../components/SearchBox';\nimport { characters } from '../data/character';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      characters:characters,\n      searchField: \"\"\n    }\n  }\n\n  filterCharacters = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render(){\n    const {characters, searchField} = this.state;\n\n    const filteredCharacters = characters.filter(character => {\n      return character.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n\n    return (\n      <div className=\"App\">\n        <h1>Meet the Gang</h1>\n        <ErrorBoundary> \n          <SearchBox \n          type={\"text\"}\n          searchChange={this.filterCharacters}/>\n\n          <Scroll>\n            <CardList characters={filteredCharacters}/>\n          </Scroll>\n        </ErrorBoundary>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport \"tachyons\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}